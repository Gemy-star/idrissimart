[tool.poetry]
name = "idrissimart"
version = "0.1.0"
description = ""
authors = ["Mohamed Ismail <mohamed.g.ismail@orange.com>"]
readme = "README.md"
packages = [{include = "idrissimart"}]

[tool.poetry.dependencies]
python = "^3.11"
django = "^5.2.7"
ruff = "^0.14.0"
django-constance = "^4.3.2"
django-crispy-forms = "^2.4"
crispy-bootstrap5 = "^2025.6"
sendgrid = "^6.12.5"
django-imagekit = "^5.0.0"
python-dotenv = "^1.1.1"
django-filter = "^25.2"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.3.0"
django-silk = "^5.4.3"
djlint = "^1.36.4"
bandit = "^1.7.6"
coverage = "^7.6.0"
black = "^25.9.0"

[tool.poetry.group.prod.dependencies]
mysqlclient = "^2.2.7"
gunicorn = "^23.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.bandit]
# Bandit configuration
exclude_dirs = [
    "tests",
    "test",
    "migrations",
    ".venv",
    "venv",
    "env",
]
skips = []

[tool.bandit.assert_used]
skips = ["*/test_*.py", "*/tests.py"]

[tool.ruff]
# Ruff configuration
line-length = 88
indent-width = 4
target-version = "py311"

# Exclude directories
exclude = [
    ".git",
    ".venv",
    "venv",
    "env",
    "__pycache__",
    "migrations",
    "staticfiles",
    "media",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
]

[tool.ruff.lint]
# Enable specific rule categories
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

# Ignore specific rules
ignore = [
    "E501",  # Line too long (handled by formatter)
    "F403",  # Star imports (allowed in Django settings)
    "F405",  # May be undefined from star imports (Django settings)
]

# Allow fix for all enabled rules (when --fix is provided)
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
# Ignore star imports in settings files
"**/settings/*.py" = ["F403", "F405"]
"**/settings.py" = ["F403", "F405"]
# Ignore import order in __init__ files
"**/__init__.py" = ["F401", "F403"]
# Ignore line length in migrations
"**/migrations/*.py" = ["E501"]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Indent with spaces, not tabs
indent-style = "space"

# Respect line length limit
line-ending = "auto"

# Format docstrings
docstring-code-format = true

# Exclude specific files from formatting
exclude = ["main/views.py"]

[tool.ruff.lint.isort]
known-first-party = ["main", "idrissimart"]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.djlint]
profile = "django"
indent = 4
max_line_length = 120
max_attribute_length = 70
format_attribute_template_tags = true
format_css = true
format_js = true
preserve_leading_space = false
preserve_blank_lines = false
blank_line_after_tag = "load,extends,include"
blank_line_before_tag = "block,endblock"
ignore = "H006,H021,H030,H031"
extend_exclude = ".git, .venv, venv, node_modules, migrations, staticfiles, media, *.min.html"
linter_output_format = "{code} {line}:{col} {message} {match}"
custom_blocks = ""
custom_html = ""
ignore_blocks = "raw,comment"
